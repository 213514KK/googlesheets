% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/consume-data.R
\name{get_via_cf}
\alias{get_via_cf}
\title{Create a data.frame of the non-empty cells in a rectangular region of a
worksheet}
\usage{
get_via_cf(ss, ws = 1, min_row = NULL, max_row = NULL, min_col = NULL,
  max_col = NULL, limits = NULL, return_empty = FALSE, verbose = TRUE)
}
\arguments{
\item{ss}{a registered Google spreadsheet}

\item{ws}{positive integer or character specifying index or title,
respectively, of the worksheet to consume; defaults to 1, i.e. the first
worksheet}

\item{min_row}{positive integer, optional}

\item{max_row}{positive integer, optional}

\item{min_col}{positive integer, optional}

\item{max_col}{positive integer, optional}

\item{limits}{list, with named components holding the min and max for rows
and columns; intended primarily for internal use}

\item{return_empty}{boolean whether to return empty cells in feed, default
is FALSE since if no query params are set then all cells in the worksheet
(default: 1000 x 26) will be returned!}

\item{verbose}{logical; do you want informative messages?}
}
\description{
No attempt to shape the returned data! Data.frame will have one row per cell.
}
\details{
Use the limits, e.g. min_row or max_col, to delineate the rectangular region
of interest. You can specify any subset of the limits or none at all. If
limits are provided, validity will be checked as well as internal consistency
and compliance with known extent of the worksheet. If no limits are provided,
all cells will be returned but user should realize that access via the list
feed is potentially a much faster to consume data from a rectangular
worksheet.

Empty cells, even if "embedded" in a rectangular region of populated cells,
are not returned by the API and will not appear in the returned data.frame.
}
\seealso{
Other data.consumption.functions: \code{\link{get_cells}};
  \code{\link{get_col}}; \code{\link{get_row}};
  \code{\link{get_via_lf}}; \code{\link{reshape_cf}};
  \code{\link{simplify_cf}}
}

